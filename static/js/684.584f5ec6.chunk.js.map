{"version":3,"file":"static/js/684.584f5ec6.chunk.js","mappings":"gRACA,GAAgB,gBAAkB,mCAAmC,KAAO,wBAAwB,MAAQ,yBAAyB,SAAW,4BAA4B,SAAW,6B,SC6EvL,EApEkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IAS1B,OAAIJ,GAAiBK,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,GAAG,eAGhCF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAAA,YAAmBC,UACjCC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACHC,SAZc,SAAAC,GAClBhB,GAASiB,EAAAA,EAAAA,IAAeD,IACpBX,GACFa,EAAAA,GAAAA,MAAY,uDAEhB,EAQMC,KAAK,QACLC,MAAO,CACLC,SAAU,KAEZC,cAAe,CACbC,UAAU,GAEZC,aAAa,MACbd,UAAWC,EAAAA,KAAYC,SAAA,EAEvBL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,YACJL,EAAAA,EAAAA,KAACO,EAAAA,EAAAA,KAAS,CACRJ,UAAWC,EAAAA,SACXc,MAAM,QACNN,KAAK,QACLO,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,6BAEXhB,UAEFL,EAAAA,EAAAA,KAACsB,EAAAA,EAAK,CAACC,KAAK,QAAQpB,UAAWC,EAAAA,WAEjCJ,EAAAA,EAAAA,KAACO,EAAAA,EAAAA,KAAS,CACRJ,UAAWC,EAAAA,SACXc,MAAM,WACNN,KAAK,WACLO,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,gCAEXhB,UAEFL,EAAAA,EAAAA,KAACsB,EAAAA,EAAAA,SAAc,CAACnB,UAAWC,EAAAA,MAAcoB,UAAW,OAEtDlB,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAAA,gBAAuBC,SAAA,EACrCL,EAAAA,EAAAA,KAACyB,EAAAA,GAAM,CAACC,SAAS,SAASH,KAAK,UAASlB,SAAC,YAGzCC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAAA,SAAgBC,SAAA,CAAC,2BACRL,EAAAA,EAAAA,KAAA,KAAG2B,KAAK,YAAWtB,SAAC,mBAAmB,cAM1E,C","sources":["webpack://react-homework-template/./src/pages/LoginPage.module.css?247b","pages/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"registerWrapper\":\"LoginPage_registerWrapper__iQZui\",\"form\":\"LoginPage_form__YME1y\",\"input\":\"LoginPage_input__D-sed\",\"formItem\":\"LoginPage_formItem__yBF3+\",\"register\":\"LoginPage_register__--+-2\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { loginUserThunk } from 'redux/operations';\nimport { selectLoggedIn, selectLoginError } from 'redux/selectors';\n\nimport { Button, Form, Input } from 'antd';\nimport styles from './LoginPage.module.css';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const loggedIn = useSelector(selectLoggedIn);\n  const error = useSelector(selectLoginError);\n\n  const handleLogin = values => {\n    dispatch(loginUserThunk(values));\n    if (error) {\n      toast.error(`We could not find any account with these credentials`);\n    }\n  };\n\n  if (loggedIn) return <Navigate to=\"/contacts\" />;\n\n  return (\n    <div className={styles.formWrapper}>\n      <Form\n        onFinish={handleLogin}\n        name=\"basic\"\n        style={{\n          maxWidth: 600,\n        }}\n        initialValues={{\n          remember: true,\n        }}\n        autoComplete=\"off\"\n        className={styles.form}\n      >\n        <h1>Log in</h1>\n        <Form.Item\n          className={styles.formItem}\n          label=\"Email\"\n          name=\"email\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input your email!',\n            },\n          ]}\n        >\n          <Input type=\"email\" className={styles.input} />\n        </Form.Item>\n        <Form.Item\n          className={styles.formItem}\n          label=\"Password\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: 'Please enter your password!',\n            },\n          ]}\n        >\n          <Input.Password className={styles.input} minLength={8} />\n        </Form.Item>\n        <div className={styles.registerWrapper}>\n          <Button htmlType=\"submit\" type=\"primary\">\n            Log in\n          </Button>\n          <div className={styles.register}>\n            Don't have an account? <a href=\"/register\">Register here.</a>{' '}\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["dispatch","useDispatch","loggedIn","useSelector","selectLoggedIn","error","selectLoginError","_jsx","Navigate","to","className","styles","children","_jsxs","Form","onFinish","values","loginUserThunk","toast","name","style","maxWidth","initialValues","remember","autoComplete","label","rules","required","message","Input","type","minLength","Button","htmlType","href"],"sourceRoot":""}
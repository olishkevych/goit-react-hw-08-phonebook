{"version":3,"file":"static/js/22.636d0bc5.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/EditContactModal/EditContactModal.module.css?937c","components/EditContactModal/EditContactModal.jsx","../node_modules/@ant-design/icons-svg/es/asn/EditOutlined.js","../node_modules/@ant-design/icons/es/icons/EditOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/DeleteOutlined.js","../node_modules/@ant-design/icons/es/icons/DeleteOutlined.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"input\":\"ContactForm_input__Bl93P\",\"formItem\":\"ContactForm_formItem__dbiTg\",\"addButton\":\"ContactForm_addButton__zGNsx\",\"wrapper\":\"ContactForm_wrapper__-Umw-\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\n\nimport { Button, Form, Input } from 'antd';\nimport styles from './ContactForm.module.css';\n\nexport function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [form] = Form.useForm();\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const onInputChange = event => {\n    event.target.name === 'number'\n      ? setNumber(event.target.value)\n      : setName(event.target.value);\n  };\n\n  const onSubmit = values => {\n    const isExisting = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (isExisting) {\n      alert(`${isExisting.name} is already in contacts`);\n      return;\n    }\n    const contactToAdd = {\n      name,\n      number,\n    };\n\n    setName('');\n    setNumber('');\n    dispatch(addContact(contactToAdd));\n    console.log(form);\n    form.resetFields(form.basic);\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <Form\n        labelAlign=\"left\"\n        form={form}\n        onFinish={onSubmit}\n        name=\"basic\"\n        style={{\n          maxWidth: 600,\n        }}\n        autoComplete=\"off\"\n        className={styles.form}\n      >\n        <h2>Add a new contact</h2>\n        <Form.Item\n          className={styles.formItem}\n          name=\"name\"\n          label=\"Name\"\n          rules={[\n            {\n              required: true,\n              message: 'Please fill in the field!',\n            },\n          ]}\n        >\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={onInputChange}\n            placeholder=\"Enter contact name...\"\n            className={styles.input}\n          />\n        </Form.Item>\n\n        <Form.Item\n          className={styles.formItem}\n          label=\"Phone\"\n          name=\"number\"\n          rules={[\n            {\n              required: true,\n              message: 'Please fill in the field!',\n            },\n          ]}\n        >\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={onInputChange}\n            placeholder=\"Enter phone number...\"\n            className={styles.input}\n          />\n        </Form.Item>\n\n        <Button htmlType=\"submit\" type=\"primary\" className={styles.addButton}>\n          Add contact\n        </Button>\n      </Form>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"EditContactModal_backdrop__hDxVO\",\"form\":\"EditContactModal_form__sPSrC\",\"buttonWrap\":\"EditContactModal_buttonWrap__s6-hQ\",\"cancelBtn\":\"EditContactModal_cancelBtn__4z5tK\"};","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { editContact } from 'redux/operations';\nimport { closeEditModal } from 'redux/reducers/contactsSlice';\n\nimport { Button, Form, Input } from 'antd';\nimport styles from './EditContactModal.module.css';\n\nconst EditContactModal = ({ contact }) => {\n  const [name, setName] = useState(contact.name);\n  const [number, setNumber] = useState(contact.number);\n  const dispatch = useDispatch();\n  const id = contact.id;\n\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.code === 'Escape') {\n        dispatch(closeEditModal());\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [dispatch]);\n\n  const applyContactEdit = () => {\n    dispatch(editContact({ id, name, number }));\n  };\n\n  const cancelContactEdit = () => {\n    dispatch(closeEditModal());\n  };\n\n  return (\n    <div className={styles.backdrop} onClick={cancelContactEdit}>\n      <Form className={styles.form} onFinish={applyContactEdit}>\n        <h1>Edit contact</h1>\n        <Form.Item label=\"Name\">\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={event => setName(event.target.value)}\n            required\n          />{' '}\n        </Form.Item>\n        <Form.Item label=\"Number\">\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={e => setNumber(e.target.value)}\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Form.Item>\n        <div className={styles.buttonWrap}>\n          {' '}\n          <Button\n            className={styles.cancelBtn}\n            htmlType=\"button\"\n            type=\"secondary\"\n            onClick={cancelContactEdit}\n          >\n            Cancel\n          </Button>\n          <Button htmlType=\"submit\" type=\"primary\">\n            Save\n          </Button>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nEditContactModal.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default EditContactModal;\n","// This icon file is generated automatically.\nvar EditOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z\" } }] }, \"name\": \"edit\", \"theme\": \"outlined\" };\nexport default EditOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport EditOutlinedSvg from \"@ant-design/icons-svg/es/asn/EditOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar EditOutlined = function EditOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: EditOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  EditOutlined.displayName = 'EditOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(EditOutlined);","// This icon file is generated automatically.\nvar DeleteOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z\" } }] }, \"name\": \"delete\", \"theme\": \"outlined\" };\nexport default DeleteOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport DeleteOutlinedSvg from \"@ant-design/icons-svg/es/asn/DeleteOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar DeleteOutlined = function DeleteOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: DeleteOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  DeleteOutlined.displayName = 'DeleteOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(DeleteOutlined);","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactList_item__EZYHO\",\"warning\":\"ContactList_warning__kHXBR\",\"name\":\"ContactList_name__UCkFW\",\"buttonWrap\":\"ContactList_buttonWrap__NySMM\",\"removeBtn\":\"ContactList_removeBtn__HBL9U\",\"phone\":\"ContactList_phone__dbg3i\",\"sortWrap\":\"ContactList_sortWrap__HLjC7\",\"sortBtn\":\"ContactList_sortBtn__q9SfC\",\"activeBtn\":\"ContactList_activeBtn__6n1rg\"};","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContactToEdit,\n  selectContacts,\n  selectError,\n  selectFilter,\n} from 'redux/selectors';\nimport { deleteContact, fetchContacts } from 'redux/operations.js';\nimport EditContactModal from 'components/EditContactModal/EditContactModal';\nimport { openEditModal } from 'redux/reducers/contactsSlice';\n\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport styles from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(selectContacts);\n  const error = useSelector(selectError);\n  const filter = useSelector(selectFilter);\n  const contactToEdit = useSelector(selectContactToEdit);\n\n  const [ascSort, setAscSort] = useState(false);\n  const [descSort, setDescSort] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleRemoveContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const handleEditContact = contact => {\n    dispatch(openEditModal(contact));\n  };\n\n  const handleAscSort = () => {\n    setAscSort(!ascSort);\n    setDescSort(false);\n  };\n  const handleDescSort = () => {\n    setDescSort(!descSort);\n    setAscSort(false);\n  };\n\n  const filteredContacts = () => {\n    if (filter.length > 0) {\n      return items.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    } else {\n      return items;\n    }\n  };\n\n  const filtered = () => {\n    if (ascSort) {\n      return [...filteredContacts()].sort((a, b) =>\n        a.name.localeCompare(b.name)\n      );\n    } else if (descSort) {\n      return [...filteredContacts()].sort((a, b) =>\n        b.name.localeCompare(a.name)\n      );\n    } else {\n      return filteredContacts();\n    }\n  };\n\n  return (\n    <div>\n      <div className={styles.sortWrap}>\n        <h4>Sort</h4>\n        <Button\n          shape=\"circle\"\n          type=\"secondary\"\n          className={ascSort ? styles.activeBtn : styles.sortBtn}\n          onClick={() => handleAscSort()}\n        >\n          A-Z\n        </Button>\n        <Button\n          shape=\"circle\"\n          type=\"secondary\"\n          className={descSort ? styles.activeBtn : styles.sortBtn}\n          onClick={() => handleDescSort()}\n        >\n          Z-A\n        </Button>\n      </div>\n      <ul>\n        {error && <p className={styles.warning}>{error}</p>}\n        {filtered().length === 0 && !error && !filter && (\n          <p className={styles.warning}>No contacts in your Phonebook yet...</p>\n        )}\n        {filtered().length === 0 && !error && filter && (\n          <p className={styles.warning}>No contacts found...</p>\n        )}\n        {filtered().map(contact => {\n          return (\n            <li className={styles.item} key={contact.id}>\n              <span className={styles.name}>{contact.name} </span>\n              <a href={`tel:${contact.number}`} className={styles.phone}>\n                {contact.number}\n              </a>\n              <div className={styles.buttonWrap}>\n                <Button\n                  shape=\"circle\"\n                  type=\"secondary\"\n                  className={styles.removeBtn}\n                  onClick={() => handleEditContact(contact)}\n                >\n                  <EditOutlined />\n                </Button>\n                <Button\n                  shape=\"circle\"\n                  type=\"secondary\"\n                  className={styles.removeBtn}\n                  onClick={() => handleRemoveContact(contact.id)}\n                >\n                  <DeleteOutlined />\n                </Button>\n              </div>\n            </li>\n          );\n        })}\n        {contactToEdit && <EditContactModal contact={contactToEdit} />}\n      </ul>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"wrapper\":\"Filter_wrapper__9Ksqy\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/reducers/filterSlice.js';\nimport { selectFilter } from 'redux/selectors';\n\nimport { Input } from 'antd';\nimport styles from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const onFilterInput = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <h3>Search contacts</h3>\n      <Input\n        placeholder=\"Start typing here...\"\n        onChange={onFilterInput}\n        style={{ width: 200 }}\n        name=\"filter\"\n        value={filter}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\nconst ContactsPage = () => {\n  return (\n    <div>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["ContactForm","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","_Form$useForm","Form","form","dispatch","useDispatch","contacts","useSelector","selectContacts","onInputChange","event","target","value","_jsx","className","styles","children","_jsxs","labelAlign","onFinish","values","isExisting","find","contact","toLowerCase","alert","concat","contactToAdd","addContact","console","log","resetFields","basic","style","maxWidth","autoComplete","label","rules","required","message","Input","type","pattern","title","onChange","placeholder","Button","htmlType","_ref","id","useEffect","handleKeyDown","code","closeEditModal","window","addEventListener","removeEventListener","cancelContactEdit","onClick","editContact","e","EditOutlined","props","ref","React","AntdIcon","_extends","icon","EditOutlinedSvg","DeleteOutlined","DeleteOutlinedSvg","ContactList","items","error","selectError","filter","selectFilter","contactToEdit","selectContactToEdit","ascSort","setAscSort","descSort","setDescSort","fetchContacts","filteredContacts","length","includes","filtered","_toConsumableArray","sort","a","b","localeCompare","shape","map","href","openEditModal","handleEditContact","deleteContact","EditContactModal","Filter","setFilter","width"],"sourceRoot":""}